'use client';
"use strict";var e=require("tslib"),r=require("react/jsx-runtime"),o=require("../Combobox/Combobox.cjs"),t=require("./FormControlLabel/FormControlLabel.cjs"),s=require("./FormControlText/FormControlText.cjs"),i=require("../Input/Input.cjs"),n=require("../InputGroup/InputGroup.cjs"),a=require("../Select/Select.cjs"),l=require("../Textarea/Textarea.cjs"),c=require("../../theme/theme.context.cjs"),u=require("../../utils/usePropId.cjs"),m=require("react"),d=require("tailwind-merge"),j=require("./FormControl.context.cjs");const b={size:"md",validation:"none"},x=m.forwardRef(((o,t)=>{const s=c.useComponentTheme("FormControl"),i=Object.assign(Object.assign({},b),o),{className:n="",children:a,size:l,validation:x}=i,C=e.__rest(i,["className","children","size","validation"]),p=u.usePropId(o.id),q={controlId:`control-${p}`,size:l,validation:x},F=m.useMemo((()=>d.twMerge(s.base({className:n}))),[n,s]);return r.jsx(j.FormControlContextProvider,Object.assign({value:q},{children:r.jsx("div",Object.assign({id:p,ref:t,className:F},C,{children:a}))}))}));x.displayName="FormControl";const C=Object.assign(x,{Label:t.FormControlLabel,Text:s.FormControlText,InputGroup:n,Input:i,Textarea:l,Select:a,Combobox:o});module.exports=C;

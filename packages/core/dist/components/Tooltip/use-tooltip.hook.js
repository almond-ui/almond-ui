import{useFloating as e,offset as r,shift as o,arrow as t,autoUpdate as n,useInteractions as a,useHover as i,safePolygon as l,useFocus as p,useDismiss as s,useRole as m}from"@floating-ui/react";import{inline as d,flip as f}from"@floating-ui/react-dom";import{arrowSideDictionary as c}from"../../helpers/arrow-side.dictionary.js";import{useRef as g,useState as w,useMemo as u}from"react";function y({initiallyOpen:y=!1,offset:v=5,placement:x="top"}){var P,h;const R=g(null),[F,C]=w(y),{x:D,y:O,refs:j,strategy:E,context:M}=e({open:F,onOpenChange:C,placement:x,middleware:[r(v),o(),d(),f(),t({element:R})],whileElementsMounted:n}),{getReferenceProps:S,getFloatingProps:X}=a([i(M,{move:!1,handleClose:l()}),p(M),s(M,{referencePress:!0}),m(M,{role:"tooltip"})]),Y=(null===(P=M.middlewareData.arrow)||void 0===P?void 0:P.x)||0,b=(null===(h=M.middlewareData.arrow)||void 0===h?void 0:h.y)||0,k=c({side:M.placement});return u((()=>({arrowRef:R,arrowSide:k,arrowX:Y,arrowY:b,context:M,floating:j.setFloating,getFloatingProps:X(),getReferenceProps:S(),open:F,reference:j.setReference,strategy:E,x:D,y:O})),[k,Y,b,M,j,X,S,F,E,D,O])}export{y as useTooltip};
